'use server'
/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –¢–µ–ª–µ–≥—Ä–∞–º
 */

interface OrderFormData {
	lastName: string
	firstName: string
	city: string
	address: string
	phone: string
	problem: string
	photos?: File[]
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –≤ –¢–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª —á–µ—Ä–µ–∑ –±–æ—Ç–∞
 */
export async function sendOrderDataToTelegram(
	data: OrderFormData
): Promise<boolean> {
	try {
		// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ ID —á–∞—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
		const botToken = process.env.TELEGRAM_BOT_ORDER_TOKEN
		const chatId = process.env.TELEGRAM_CHAT_ID

		console.log('botToken', botToken ? '–û–ø—Ä–µ–¥–µ–ª–µ–Ω' : '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')
		console.log('chatId', chatId ? '–û–ø—Ä–µ–¥–µ–ª–µ–Ω' : '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')

		if (!botToken || !chatId) {
			console.error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Telegram')
			return false
		}

		// –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
		const message = `
üîî *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —É—Å–ª—É–≥—É*

üë§ *–§–ò–û*: ${data.lastName} ${data.firstName}
üèôÔ∏è *–ì–æ—Ä–æ–¥*: ${data.city}
üè† *–ê–¥—Ä–µ—Å*: ${data.address}
üìû *–¢–µ–ª–µ—Ñ–æ–Ω*: ${data.phone}
üí¨ *–ü—Ä–æ–±–ª–µ–º–∞*: ${data.problem}
üì∑ *–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏*: ${
			data.photos && data.photos.length > 0 ? '–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω—ã' : '–ù–µ—Ç'
		}
`

		// –ò—Å–ø–æ–ª—å–∑—É–µ–º Telegram Bot API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
		try {
			const textResponse = await fetch(
				`https://api.telegram.org/bot${botToken}/sendMessage`,
				{
					method: 'POST',
					headers: {
						'Content-Type': 'application/json',
					},
					body: JSON.stringify({
						chat_id: chatId,
						text: message,
						parse_mode: 'Markdown',
					}),
					cache: 'no-store',
				}
			)

			if (!textResponse.ok) {
				const errorText = await textResponse.text()
				console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', errorText)
				return false
			}

			const textResult = await textResponse.json()

			if (!textResult.ok) {
				console.error('Telegram API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É:', textResult)
				return false
			}

			// –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ö
			if (data.photos && data.photos.length > 0) {
				// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–µ –±–æ–ª–µ–µ 5 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
				const limitedPhotos = data.photos.slice(0, 5)

				for (const photo of limitedPhotos) {
					try {
						// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º File –≤ ArrayBuffer
						const arrayBuffer = await photo.arrayBuffer()

						// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É–º–µ–Ω—å—à–∞–µ–º –µ–≥–æ
						if (arrayBuffer.byteLength > 5000000) {
							// –ü—Ä–µ–¥–µ–ª ~5MB
							console.warn('–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º:', photo.name)
							continue
						}

						// –°–æ–∑–¥–∞–µ–º FormData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞
						const formData = new FormData()
						formData.append('chat_id', chatId)
						formData.append('caption', `–§–æ—Ç–æ: ${photo.name}`)

						// –°–æ–∑–¥–∞–µ–º Blob –∏–∑ ArrayBuffer —Å —Ç–∏–ø–æ–º —Ñ–∞–π–ª–∞
						const blob = new Blob([arrayBuffer], { type: photo.type })
						formData.append('photo', blob, photo.name)

						// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
						const photoResponse = await fetch(
							`https://api.telegram.org/bot${botToken}/sendPhoto`,
							{
								method: 'POST',
								body: formData,
								cache: 'no-store',
							}
						)

						if (!photoResponse.ok) {
							console.error(
								'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ:',
								await photoResponse.text()
							)
						}
					} catch (e) {
						console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ:', e)
						// –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –¥—Ä—É–≥–∏–º–∏ —Ñ–æ—Ç–æ, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–¥–Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å
					}
				}
			}

			return true
		} catch (networkError) {
			console.error('–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:', networkError)
			return false
		}
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram:', error)
		return false
	}
}
